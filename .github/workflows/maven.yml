  # This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

  name: Java CI/CD with Maven

  on:
    workflow_dispatch:
      inputs:
        logLevel:
          description: 'Log level'
          required: true
          default: 'warning'
          type: choice
          options:
            - info
            - warning
            - debug

  env:
    PROJECT_NAME: EnvEdu_Server
    BUCKET_NAME: env-edu-server-s3
    CODE_DEPLOY_APP_NAME: EnvEduServer_CodeDeploy
    DEPLOYMENT_GROUP_NAME: EnvEduServer_CodeDeploy

  jobs:
    build-and-deploy:
      runs-on: ubuntu-20.04
      steps:
        - name: Checkout
          uses: actions/checkout@v2

        - name: Set up JDK 11
          uses: actions/setup-java@v2
          with:
            java-version: '11'
            distribution: 'adopt'

        - name: Prepare Environment
          run: |
            if [ -d "$PROJECT_NAME" ]; then
              echo "Directory $PROJECT_NAME exists. Removing..."
              rm -rf $PROJECT_NAME
            fi
            echo "Creating directory $PROJECT_NAME..."
            sudo mkdir -p $PROJECT_NAME

        - name: Make application.yml
          run: |
            # Ensure the directory exists
            mkdir -p ${{ env.PROJECT_NAME }}/src/main/resources

            # Create or overwrite application.yml with the secret content
            echo "${{ secrets.APPLICATION_YML }}" > ${{ env.PROJECT_NAME }}/src/main/resources/application.yml
        

        - name: Build with Maven
          run: |
            cd $PROJECT_NAME
            mvn clean package -DskipTests
          env:
            MAVEN_OPTS: -Dorg.slf4j.simpleLogger.defaultLogLevel=${{ github.event.inputs.logLevel }}

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
            aws-region: ap-northeast-2

        - name: Archive and upload to S3
          run: |
            zip -j $PROJECT_NAME.zip $PROJECT_NAME/target/*.jar
            aws s3 cp $PROJECT_NAME.zip s3://$BUCKET_NAME/$PROJECT_NAME/  

        - name: Code Deploy
          run: aws deploy create-deployment --application-name $CODE_DEPLOY_APP_NAME --deployment-config-name CodeDeployDefault.OneAtATime --deployment-group-name $DEPLOYMENT_GROUP_NAME --s3-location bucket=$BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$PROJECT_NAME.zip
